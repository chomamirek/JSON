{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": { "type": "string" },
      "adminPassword": { "type": "securestring" },
      "virtualMachines_myVM_name": {"type": "string"},
      "numberOfInstances": {"type": "int","defaultValue": 2},
      "OS": {"type": "string"},
      "diskSizeGB":{"type": "string"},
      "location": {"type": "string","defaultValue": "[resourceGroup().location]"},
      "storageAccountType":{"type":"string","defaultValue": "Standard_LRS"},
      "availabilitySetYorN": {"type": "string","allowedValues": ["Yes","No"]},
      "PublicIPYorN": {"type": "string","allowedValues": ["Yes","No"]},
      "AutoShutdownYorN": {"type": "string","allowedValues": ["Yes","No"]}
          },
    "variables": {
      "virtualNetworkName": "vNET",
      "addressPrefix": "10.0.0.16/28",
      "subnet1Name": "Subnet-1",
      "subnet1Prefix": "10.0.0.16/28",
      "managediskname": "OSDISK",
      "PublicIP": "PIP",
      "ShutDownSchedule":"shutdownvm",
      "nic": "NICx",
      "nicnoIP": "NIC",
      "networkSecurityGroups":"NSG",
      "storageAccountName":"[toLower(concat('diaglogsa', resourceGroup().name))]",
      "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('virtualNetworkName'),variables('subnet1Name'))]",
      "availabilitySetName": "AvSet",
      "availabilitySet": {"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"},
      "publicIPAddressesId": {"id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('virtualMachines_myVM_name'),variables('PublicIP')))]"},
      "publicIPAddressesDep":"[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('virtualMachines_myVM_name'),variables('PublicIP')))]",
      "nicpublic":"[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('virtualMachines_myVM_name'),variables('nic')))]",
      "nicprivate":"[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('virtualMachines_myVM_name'),variables('nicnoIP')))]",
      "vmStorageAccountContainerName": "vhds",
      "existingVirtualMachinesResourceGroup":"[resourceGroup().name]",
      "BackupResourceGroup":"Infra04",
      "vaultName": "MyRSVault",
      "rgLocation": "North Europe",
      "backupFabric": "Azure",
      "backupPolicyName": "DefaultPolicy",
      "recoveryVault":"recVault",
      "v2Vm": "vm;iaasvmcontainerv2;",
      "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
      "v2VmType": "Microsoft.Compute/virtualMachines",
      "Ubuntu": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "16.04.0-LTS",
        "version": "latest"
      },
      "Windows": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2016-Datacenter",
        "version": "latest"
      },
      "imageReference": "[variables(parameters('OS'))]"
    },
    "resources": [
         {
       "condition": "[equals(parameters('availabilitySetYorN'), 'Yes')]",
       "type": "Microsoft.Compute/availabilitySets",
       "name": "[variables('availabilitySetName')]",
       "apiVersion": "2016-04-30-preview",
       "location": "[parameters('location')]",
        "properties": {
         "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 2,
          "managed": true
        }
     },
   {
    "type": "Microsoft.Storage/storageAccounts",
    "name": "[variables('storageAccountName')]",
    "apiVersion": "2018-02-01",
    "location": "[parameters('location')]",
    "sku": {
      "name": "[parameters('storageAccountType')]"
    },
    "kind": "Storage",
    "properties": {}
},  
     {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "apiVersion": "2016-03-30",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnet1Name')]",
              "properties": {
                "addressPrefix": "[variables('subnet1Prefix')]"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-08-01",
        "condition": "[equals(parameters('PublicIPYorN'), 'Yes')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat(parameters('virtualMachines_myVM_name'),variables('PublicIP'), copyIndex(1))]",
        "location": "[parameters('location')]",
        "copy": {
          "name": "publicIPAddressesIPLoop",
          "count": "[parameters('numberOfInstances')]"
        },
        "sku": {
            "name": "Basic",
            "tier": "Regional"
        },
        "properties": {
          "publicIPAddressVersion": "IPv4",
          "publicIPAllocationMethod": "Dynamic",
          "idleTimeoutInMinutes": 4,
          "dnsSettings": 
          {
            "domainNameLabel": "[concat(toLower(parameters('virtualMachines_myVM_name')), copyIndex(1))]"
            }
          }
        
        },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "condition": "[equals(parameters('PublicIPYorN'), 'Yes')]",
        "name": "[concat(parameters('virtualMachines_myVM_name'),variables('nic'), copyIndex(1))]",
        "apiVersion": "2016-03-30",
        "location": "[parameters('location')]",
        "copy": {
          "name": "nicLoop",
          "count": "[parameters('numberOfInstances')]"
        },
        
        "properties": {
            "networkSecurityGroup":{
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups'))]"
                },
          "ipConfigurations": [
              
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('virtualMachines_myVM_name'),variables('PublicIP'), copyIndex(1)))]"
                            },
                "subnet": {
                  "id": "[variables('subnet1Ref')]"
                },
                "primary": true,
                "privateIPAddressVersion": "IPv4"
              } 
            }
          ]
        },
        "dependsOn": [
            "[variables('virtualNetworkName')]",
            "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('virtualMachines_myVM_name'),variables('PublicIP'), copyIndex(1)))]",
            "[variables('networkSecurityGroups')]"
       
          ]
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "condition": "[equals(parameters('PublicIPYorN'), 'No')]",
        "name": "[concat(parameters('virtualMachines_myVM_name'),variables('nicnoIP'), copyIndex(1))]",
        "apiVersion": "2016-03-30",
        "location": "[parameters('location')]",
        "copy": {
          "name": "nicLoop",
          "count": "[parameters('numberOfInstances')]"
        },
        
        "properties": {
            "networkSecurityGroup":{
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups'))]"
                },
          "ipConfigurations": [
              
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
            
                "subnet": {
                  "id": "[variables('subnet1Ref')]"
                }
              
              } 
            }
          ]
        },
        "dependsOn": [
            "[variables('virtualNetworkName')]",
            "[variables('networkSecurityGroups')]"
        ]
        
      },
        {
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('networkSecurityGroups')]",
        "apiVersion": "2018-02-01",
        "location": "northeurope",
        "scale": null,
        "properties": {
            "provisioningState": "Succeeded",
            "securityRules": [
                {
                    "name": "RDP",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "protocol": "TCP",
                        "sourcePortRange": "*",
                        "destinationPortRange": "3389",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 300,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                  "name": "HTTP",
                  "properties": {
                      "provisioningState": "Succeeded",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 400,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                  }
              },
              {
                "name": "HTTPS",
                "properties": {
                    "provisioningState": "Succeeded",
                    "protocol": "TCP",
                    "sourcePortRange": "*",
                    "destinationPortRange": "443",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 500,
                    "direction": "Inbound",
                    "sourcePortRanges": [],
                    "destinationPortRanges": [],
                    "sourceAddressPrefixes": [],
                    "destinationAddressPrefixes": []
                }
            }

            ],
            "defaultSecurityRules": [
                {
                    "name": "AllowVnetInBound",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "description": "Allow inbound traffic from all VMs in VNET",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 65000,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "AllowAzureLoadBalancerInBound",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "description": "Allow inbound traffic from azure load balancer",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "AzureLoadBalancer",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 65001,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "DenyAllInBound",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "description": "Deny all inbound traffic",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Deny",
                        "priority": 65500,
                        "direction": "Inbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "AllowVnetOutBound",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "VirtualNetwork",
                        "access": "Allow",
                        "priority": 65000,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "AllowInternetOutBound",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "description": "Allow outbound traffic from all VMs to Internet",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "Internet",
                        "access": "Allow",
                        "priority": 65001,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                },
                {
                    "name": "DenyAllOutBound",
                    "properties": {
                        "provisioningState": "Succeeded",
                        "description": "Deny all outbound traffic",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Deny",
                        "priority": 65500,
                        "direction": "Outbound",
                        "sourcePortRanges": [],
                        "destinationPortRanges": [],
                        "sourceAddressPrefixes": [],
                        "destinationAddressPrefixes": []
                    }
                }
            ]
        }
    },
   
        
     {
    "type": "Microsoft.DevTestLab/schedules",
    "condition": "[equals(parameters('AutoShutdownYorN'), 'Yes')]",
    "name": "[concat('shutdown-computevm-',parameters('virtualMachines_myVM_name'), copyIndex(1))]",
    "apiVersion": "2017-04-26-preview",
      "location": "[resourceGroup().location]",
      "scale": null,
      "copy": {"name": "schedulesLoop","count": "[parameters('numberOfInstances')]"},
      "properties": {
          "status": "Enabled",
          "taskType": "ComputeVmShutdownTask",
          "dailyRecurrence": {
                "time": "1900"
            },
           "timeZoneId": "Central European Standard Time",
           "notificationSettings": {
           "status": "Disabled",
                "timeInMinutes": 30
                   },
          "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('virtualMachines_myVM_name'), copyIndex(1)))]"
           
    },
       "dependsOn":[ "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachines_myVM_name'), copyIndex(1)))]"]
      
    },
     
   
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(parameters('virtualMachines_myVM_name'), copyIndex(1))]",
        "apiVersion": "2016-04-30-preview",
        "location": "[parameters('location')]",
        "copy": {"name": "virtualMachineLoop","count": "[parameters('numberOfInstances')]"},
        "dependsOn": ["[if(equals(parameters('PublicIPYorN'),'Yes'), concat(variables('nicpublic'),copyIndex(1)),concat(variables('nicprivate'),copyIndex(1)))]"],
        "properties": {
          "availabilitySet": "[if(equals(parameters('availabilitySetYorN'),'Yes'), variables('availabilitySet'), json('null'))]",
          "hardwareProfile": {"vmSize": "Standard_D1_v2"}, 
          "licenseType": "Windows_Server",
          "osProfile": {"computerName": "[concat(parameters('virtualMachines_myVM_name'), copyIndex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"},
          "storageProfile": {
            "imageReference": "[variables('imageReference')]",
            "osDisk":{
                "name": "[concat(parameters('virtualMachines_myVM_name'),variables('managediskname'), copyIndex(1))]",
                "caching": "ReadWrite",
                "createOption": "FromImage",
                "diskSizeGB": "[parameters('diskSizeGB')]"
            }
            },

            "networkProfile": {
                "networkInterfaces": [
                  {
                    "id": "[if(equals(parameters('PublicIPYorN'),'Yes'), concat(variables('nicpublic'),copyIndex(1)),concat(variables('nicprivate'),copyIndex(1)))]"

                  }
                ]
      },
      "diagnosticsProfile": {
        "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net/')]"
            
         
        }
    }
          }
          
        }
        
     
    
    ]
}


  